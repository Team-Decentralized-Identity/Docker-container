version: '3.7'

services:
  plc:
    ports:
      - "2582:3000"
    build:
      context: ./repos/did-method-plc/
      dockerfile: packages/server/Dockerfile
    env_file: ./.plc.env
    depends_on:
      - db

  bgs:
    ports:
      - "2470:2470"
    build:
      context: ./repos/indigo/
      dockerfile: cmd/bigsky/Dockerfile
    env_file: ./.bgs.env
    volumes:
      - ./data/bgs/:/data/
    depends_on:
      - db

  bsky:
    ports:
      - "2584:3000"
    build:
      context: ./
      dockerfile: services/bsky/Dockerfile
    env_file: ./.bsky.env
    depends_on:
      - db
      - redis

  bsky-daemon:
    build:
      context: ./
      dockerfile: services/bsky/Dockerfile
    command: node --enable-source-maps daemon.js
    env_file: ./.bsky.env
    depends_on:
      - bsky
      - db
      - redis

  bsky-indexer:
    build:
      context: ./
      dockerfile: services/bsky/Dockerfile
    command: node --enable-source-maps indexer.js
    env_file: ./.bsky.env
    volumes:
      - ./data/bsky/cache/:/cache/
    depends_on:
      - bsky
      - db
      - redis

  bsky-ingester:
    build:
      context: ./
      dockerfile: services/bsky/Dockerfile
    command: node --enable-source-maps ingester.js
    env_file: ./.bsky.env
    volumes:
      - ./data/bsky/cache/:/cache/
    depends_on:
      - bsky
      - db
      - redis

  mod:
    ports:
      - "2585:3000"
    build:
      context: ./
      dockerfile: services/ozone/Dockerfile
    env_file: ./.mod.env
    depends_on:
      - db

  mod-daemon:
    build:
      context: ./
      dockerfile: services/ozone/Dockerfile
    command: node --enable-source-maps daemon.js
    env_file: ./.mod.env
    depends_on:
      - mod
      - db

  pds:
    ports:
      - "2583:3000"
    build:
      context: ./
      dockerfile: services/pds/Dockerfile
    env_file: ./.pds.env
    volumes:
      - ./data/pds/:/data/
    depends_on:
      - db

  social-app:
    ports:
      - "8100:8100"
    build:
      context: ./repos/social-app/
      dockerfile: Dockerfile
    env_file: ./.web.env
    command: "/usr/bin/bskyweb serve"

  db:
    image: postgres:latest
    env_file: ./.db.env
    volumes:
      - ./postgres/init/:/docker-entrypoint-initdb.d/
      - ./data/db/:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: test
      POSTGRES_PASSWORD: password

  redis:
    image: redis
    volumes:
      - ./data/redis/:/data/

  caddy:
    image: caddy:2-alpine
    container_name: caddyDID
    command: caddy reverse-proxy --from https://thatsotechy.tech:443 --to http://thatsotechy.tech:8100
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/opt/atproto/Caddyfile
    depends_on:
      - bsky
